name: "Publish to Github, CurseForge and Modrinth"

on:
    workflow_dispatch:

jobs:
    publish:
        runs-on: ubuntu-latest
        name: Publish ${{ matrix.branch }} ${{ matrix.mod_loader }}
        timeout-minutes: 60
        strategy:
            max-parallel: 4
            fail-fast: false
            matrix:
                branch: [1.19.2, 1.19.3, 1.19.4, 1.20.1, 1.20.2, 1.20.4]
                mod_loader: [ fabric, quilt, forge, neoforge ]
                include:
                    -   mod_loader: quilt
                        curseforge_id: ${{ vars.CURSEFORGE_FABRIC_PROJECT_ID }}
                        modrinth_id: ${{ vars.MODRINTH_FABRIC_PROJECT_ID }}
                    -   mod_loader: fabric
                        curseforge_id: ${{ vars.CURSEFORGE_FABRIC_PROJECT_ID }}
                        modrinth_id: ${{ vars.MODRINTH_FABRIC_PROJECT_ID }}
                    -   mod_loader: forge
                        curseforge_id: ${{ vars.CURSEFORGE_FORGE_PROJECT_ID }}
                        modrinth_id: ${{ vars.MODRINTH_FORGE_PROJECT_ID }}
                    -   mod_loader: neoforge
                        curseforge_id: ${{ vars.CURSEFORGE_FORGE_PROJECT_ID }}
                        modrinth_id: ${{ vars.MODRINTH_FORGE_PROJECT_ID }}

        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v4.1.1
                with:
                    ref:  ${{ matrix.branch }}
                    fetch-depth: 0

            -   name: "Check if the mod loader is supported"
                id: check-mod-loader
                run: |
                    if [ -d ${{ matrix.mod_loader }} ]; then
                        echo "Mod loader is supported"
                        echo "is_mod_loader_supported=true" >> $GITHUB_OUTPUT
                    else
                        echo "Mod loader is not supported"
                        echo "is_mod_loader_supported=false" >> $GITHUB_OUTPUT
                    fi

            -   name: "Set up JDK"
                if: steps.check-mod-loader.outputs.is_mod_loader_supported == 'true'
                uses: actions/setup-java@v4.0.0
                with:
                    java-version: 17
                    distribution: temurin

            -   name: "Parse Gradle Properties"
                if: steps.check-mod-loader.outputs.is_mod_loader_supported == 'true'
                id: gradle-properties
                run: |
                    while IFS='=' read -r key value; do
                      key=$(echo $key | awk '{$1=$1;print}')
                        value=$(echo $value | awk '{$1=$1;print}')
                    
                        case "$key" in
                          minecraft_version) echo "MINECRAFT_VERSION=$value" >> $GITHUB_OUTPUT ;;
                          mod_name) echo "MOD_NAME=$value" >> $GITHUB_OUTPUT ;;
                          mod_version) echo "MOD_VERSION=$value" >> $GITHUB_OUTPUT ;;
                        esac
                    done < gradle.properties

            -   name: "Parse Changelog"
                if: steps.check-mod-loader.outputs.is_mod_loader_supported == 'true'
                id: parse-changelog
                run: |
                    changelog=$(cat CHANGELOG.md)
                    tag=${{ steps.gradle-properties.outputs.MOD_VERSION }}

                    list=$(echo "$changelog" | sed -n "/^## $tag/,/^## [0-9]/p" | sed -e '1d;$d' -e '/^$/d' | sed 's/^- //')

                    echo "CHANGELOG=$list" >> $GITHUB_OUTPUT

            -   name: "Create github release"
                if: steps.check-mod-loader.outputs.is_mod_loader_supported == 'true'
                uses: ncipollo/release-action@v1
                with:
                    skipIfReleaseExists: true
                    tag: mc${{ steps.gradle-properties.outputs.MINECRAFT_VERSION }}-${{ steps.gradle-properties.outputs.MOD_VERSION }}
                    name: ${{ steps.gradle-properties.outputs.MOD_NAME }} ${{ steps.gradle-properties.outputs.MOD_VERSION }} for Minecraft ${{ steps.gradle-properties.outputs.MINECRAFT_VERSION }}
                    body: ${{ steps.parse-changelog.outputs.CHANGELOG }}

            -   name: "Setup Gradle and run build"
                if: steps.check-mod-loader.outputs.is_mod_loader_supported == 'true'
                uses: gradle/gradle-build-action@v2.11.1
                with:
                    cache-read-only: true
                    generate-job-summary: false
                    gradle-version: wrapper
                    arguments: ${{ matrix.mod_loader }}:build

            -   name: Publish ${{ matrix.mod_loader }}
                if: steps.check-mod-loader.outputs.is_mod_loader_supported == 'true'
                uses: Kir-Antipov/mc-publish@v3.3.0
                with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    github-tag: mc${{ steps.gradle-properties.outputs.MINECRAFT_VERSION }}-${{ steps.gradle-properties.outputs.MOD_VERSION }}

                    name: ${{ steps.gradle-properties.outputs.MOD_NAME }} mc${{ steps.gradle-properties.outputs.MINECRAFT_VERSION }}-${{ steps.gradle-properties.outputs.MOD_VERSION }} (${{ matrix.mod_loader }})
                    files: |
                        ${{ matrix.mod_loader }}/build/libs/!(*-@(dev|dev-shadow|sources|javadoc)).jar